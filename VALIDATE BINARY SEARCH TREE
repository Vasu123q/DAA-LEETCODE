/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool check(TreeNode* root,long long  m,long long  M){
        if(root==NULL){return true;}
        if(root->val>m && root->val<M){
            bool left=check(root->left,m,root->val);
            bool right=check(root->right,root->val,M);
            return left && right;
        }
        else {return false;}
    }
    void inorder(TreeNode* root,vector<int>&ans){
        if(root==NULL ){return ;}
        inorder(root->left,ans);
        ans.push_back(root->val);
        inorder(root->right,ans);
    }

    bool isValidBST(TreeNode* root) {
        long long  m=LLONG_MIN,M=LLONG_MAX;
        vector<int>ans;
        inorder(root,ans);
        for(int i=0;i<ans.size()-1;i++){
            if(ans[i+1]<=ans[i]){return false;}
        }
        return true;
        
        
    }
};
